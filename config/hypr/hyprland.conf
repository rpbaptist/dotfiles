# ##################################################
# ##  _   _                  _                 _  ##
# ## | | | |_   _ _ __  _ __| | __ _ _ __   __| | ##
# ## | |_| | | | | '_ \| '__| |/ _` | '_ \ / _` | ##
# ## |  _  | |_| | |_) | |  | | (_| | | | | (_| | ##
# ## |_| |_|\__, | .__/|_|  |_|\__,_|_| |_|\__,_| ##
# ##        |___/|_|                              ##
# ##################################################
$mod = SUPER
$metaMod= SUPER + SHIFT
$launchMod= SUPER + CTRL

$launcher = fuzzel
$term = kitty


# ##############################################
# ##                           _              ##
# ##  ___  ___  _   _ _ __ ___(_)_ __   __ _  ##
# ## / __|/ _ \| | | | '__/ __| | '_ \ / _` | ##
# ## \__ \ (_) | |_| | | | (__| | | | | (_| | ##
# ## |___/\___/ \__,_|_|  \___|_|_| |_|\__, | ##
# ##                                   |___/  ##
# ##############################################

source = ~/.config/hypr/settings/animations.conf/
source = ~/.config/hypr/settings/background.conf
source = ~/.config/hypr/settings/blur_system.conf
source = ~/.config/hypr/settings/corners.conf
source = ~/.config/hypr/settings/input.conf
source = ~/.config/hypr/settings/monitor.conf
source = ~/.config/hypr/settings/status_bar.conf
source = ~/.config/hypr/settings/window_gaps.conf

# #############################################
# ##  _     _           _ _                  ##
# ## | |__ (_)_ __   __| (_)_ __   __ _ ___  ##
# ## | '_ \| | '_ \ / _` | | '_ \ / _` / __| ##
# ## | |_) | | | | | (_| | | | | | (_| \__ \ ##
# ## |_.__/|_|_| |_|\__,_|_|_| |_|\__, |___/ ##
# ##                              |___/      ##
# #############################################

# See https://wiki.hyprland.org/Configuring/Keywords/ for more
# Reaload waybar
# bind = $mod, b, exec, ~/.config/hypr/brain/scripts/waybar_restart.sh
# Example binds, see https://wiki.hyprland.org/Configuring/Binds/ for more
bind = $mod, R, exec, hyprctl reload
bind = $launchMod, T, exec, $term
bind = $mod, w, killactive,
# bind = $mod SHIFT, E, exec, nwgbar
# bind = $mod, N, exec, thunar
# bind = $mod SHIFT, 65, togglefloating,
# bindr= SUPER, SUPER_L, exec, pkill wofi || wofi --normal-window --show drun --allow-images
# bind = $mod, SPACE, exec, $launcher
bind = $mod, SPACE, exec, $launcher
bind = $mod, P, pseudo, # dwindle
bind = $mod, o, togglesplit, # dwindle


# Move focus with mod + arrow keys
bind = $mod, left, movefocus, l
bind = $mod, n, movefocus, l
bind = $mod, right, movefocus, r
bind = $mod, i, movefocus, r
bind = $mod, up, movefocus, u
bind = $mod, u, movefocus, u
bind = $mod, down, movefocus, d
bind = $mod, e, movefocus, d

# Switch workspaces with mod + [0-9]
bind = $mod, 1, workspace, 1
bind = $mod, 2, workspace, 2
bind = $mod, 3, workspace, 3
bind = $mod, 4, workspace, 4
bind = $mod, 5, workspace, 5
bind = $mod, 6, workspace, 6
bind = $mod, 7, workspace, 7
bind = $mod, 8, workspace, 8
bind = $mod, 9, workspace, 9
bind = $mod, 0, workspace, 10

# Move to workspace with focused container with ALT + SHIFT + [0-9]
bind = $mod SHIFT, 1, movetoworkspace, 1
bind = $mod SHIFT, 2, movetoworkspace, 2
bind = $mod SHIFT, 3, movetoworkspace, 3
bind = $mod SHIFT, 4, movetoworkspace, 4
bind = $mod SHIFT, 5, movetoworkspace, 5
bind = $mod SHIFT, 6, movetoworkspace, 6
bind = $mod SHIFT, 7, movetoworkspace, 7
bind = $mod SHIFT, 8, movetoworkspace, 8
bind = $mod SHIFT, 9, movetoworkspace, 9
bind = $mod SHIFT, 0, movetoworkspace, 10

# Move active window to a workspace with mod + SHIFT + [0-9]
bind = $mod CTRL SHIFT, 1, movetoworkspacesilent, 1
bind = $mod CTRL SHIFT, 2, movetoworkspacesilent, 2
bind = $mod CTRL SHIFT, 3, movetoworkspacesilent, 3
bind = $mod CTRL SHIFT, 4, movetoworkspacesilent, 4
bind = $mod CTRL SHIFT, 5, movetoworkspacesilent, 5
bind = $mod CTRL SHIFT, 6, movetoworkspacesilent, 6
bind = $mod CTRL SHIFT, 7, movetoworkspacesilent, 7
bind = $mod CTRL SHIFT, 8, movetoworkspacesilent, 8
bind = $mod CTRL SHIFT, 9, movetoworkspacesilent, 9
bind = $mod CTRL SHIFT, 0, movetoworkspacesilent, 10

# Scroll through existing workspaces with mod + scroll
# bind = $mod, mouse_down, workspace, e+1
# bind = $mod, mouse_up, workspace, e-1

bind = $mod, bracketleft, workspace, -1
bind = $mod, bracketright, workspace, +1

bind = $mod ALT, bracketleft, movetoworkspace, -1
bind = $mod ALT, bracketright, movetoworkspace, +1


# Move/resize windows with mod + LMB/RMB and dragging
bindm = ALT, mouse:272, movewindow
bindm = ALT, mouse:273, resizewindow


# set volume (laptops only and may or may not work on PCs)
bind = ,122, exec, pamixer --decrease 5; notify-send " Volume: "$(pamixer --get-volume) -t 500
bind = ,123, exec, pamixer --increase 5; notify-send " Volume: "$(pamixer --get-volume) -t 500
bind = ,121, exec, pamixer --toggle-mute; notify-send " Volume: Toggle-mute" -t 500
bind = ,XF86AudioMicMute, exec, pactl set-source-mute @DEFAULT_SOURCE@ toggle; notify-send "System Mic: Toggle-mute" -t 500

#other bindings
# bind = $mod, O, exec, firedragon
bind = $mod, m, fullscreen
bind = $mod SHIFT, m, fakefullscreen
bind = ,232,exec,brightnessctl -c backlight set 5%-
bind = ,233,exec,brightnessctl -c backlight set +5%

# sets repeatable binds for resizing the active window
bind = $mod CTRL ALT, i,resizeactive,50 0
bind = $mod CTRL ALT, n,resizeactive,-50 0
bind = $mod CTRL ALT, u,resizeactive,0 -50
bind = $mod CTRL ALT, e,resizeactive,0 50

# to move window
bind = $mod SHIFT,up, movewindow, u
bind = $mod SHIFT,u, movewindow, u
bind = $mod SHIFT,down, movewindow, d
bind = $mod SHIFT,e, movewindow, d
bind = $mod SHIFT,left, movewindow, l
bind = $mod SHIFT,n, movewindow, l
bind = $mod SHIFT,right, movewindow, r
bind = $mod SHIFT,i, movewindow, r

#video play paues bindings
bind=,172,exec,playerctl play-pause
bind=,171,exec,playerctl next
bind=,173,exec,playerctl previous

#screenshot
# Snip a selection and pipe to swappy
#bind = ,Print, exec, grim -g "$(slurp)" - | swappy -f -
# Screenshot a window and pipe to swappy
#bind = CTRL, Print, exec, .config/hypr/scripts/screenshot_window.sh
# Screenshot the current display and pipe to swappy
#bind = SHIFT, Print, exec, .config/hypr/scripts/screenshot_display.sh

bind = ,Print, exec, grimblast save screen && notify-send Screenshot captured
bind = SHIFT, Print, exec, grimblast save area && notify-send Selected\ area captured
bind = ALT, Print, exec, grimblast save active && notify-send Active\ window captured
bind = ALT SHIFT, Print, exec, grimblast output active && notify-send Output captured

